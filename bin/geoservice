#!/bin/sh
# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

# Get standard environment variables
PRGDIR=`dirname "$PRG"`

#JVM max memory 2G, min 512M, single thread max 1024K 
JAVA_OPTS="-Xmx2048m -Xms512m -Xss512k"
# Only set GEO_HOME if not already set
[ -z "$GEO_HOME" ] && GEO_HOME=`cd "$PRGDIR/.." >/dev/null; pwd`

CLASSPATH=

THIRD_LIB=$GEO_HOME/lib
for f in $THIRD_LIB/*
do
    CLASSPATH=$CLASSPATH:$f
   
done
CLASSPATH=~/geospatial/patch/:$GEO_HOME/geospatial.jar$CLASSPATH
GEO_PID=$GEO_HOME/.geo.pid
GEO_OUT=$GEO_HOME/.geooutput
GEO_LOG=$GEO_HOME/logs/geolocation.log
GEO_LOG_CONF=$GEO_HOME/etc/logging.ini

JAVA_CMD=java

if [ ! -z "$JAVA_HOME" ]
then
   JAVA_CMD=$JAVA_HOME/bin/java
fi


if [ "$1" = "jpda" ] ; then
  if [ -z "$JPDA_TRANSPORT" ]; then
    JPDA_TRANSPORT="dt_socket"
  fi
  if [ -z "$JPDA_ADDRESS" ]; then
    JPDA_ADDRESS="8000"
  fi
  if [ -z "$JPDA_SUSPEND" ]; then
    JPDA_SUSPEND="n"
  fi
  if [ -z "$JPDA_OPTS" ]; then
    JPDA_OPTS="-agentlib:jdwp=transport=$JPDA_TRANSPORT,address=$JPDA_ADDRESS,server=y,suspend=$JPDA_SUSPEND"
  fi
  shift
fi

if [ "$1" = "start" ] ; then

  if [ ! -z "$GEO_PID" ]; then
    if [ -f "$GEO_PID" ]; then
      if [ -s "$GEO_PID" ]; then
        echo "Existing PID file found during start."
        if [ -r "$GEO_PID" ]; then
          PID=`cat "$GEO_PID"`
          ps -p $PID >/dev/null 2>&1
          if [ $? -eq 0 ] ; then
            echo "Geolocation service appears to still be running with PID $PID. Start aborted."
            exit 1
          else
            echo "Removing/clearing stale PID file."
            rm -f "$GEO_PID" >/dev/null 2>&1
            if [ $? != 0 ]; then
              if [ -w "$GEO_PID" ]; then
                cat /dev/null > "$GEO_PID"
              else
                echo "Unable to remove or clear stale PID file. Start aborted."
                exit 1
              fi
            fi
          fi
        else
          echo "Unable to read PID file. Start aborted."
          exit 1
        fi
      else
        rm -f "$GEO_PID" >/dev/null 2>&1
        if [ $? != 0 ]; then
          if [ ! -w "$GEO_PID" ]; then
            echo "Unable to remove or write to empty PID file. Start aborted."
            exit 1
          fi
        fi
      fi
    fi
  fi


  touch "$GEO_OUT"
  TT=`cat $GEO_LOG_CONF|grep pattern`
  if [ -z "$TT" ]; then 
     echo "java.util.logging.FileHandler.pattern=$GEO_LOG" >> $GEO_LOG_CONF
  fi
   
  $JAVA_CMD $JPDA_OPTS $JAVA_OPTS -DGEO_HOME=$GEO_HOME -Djava.util.logging.config.file=$GEO_LOG_CONF -classpath $CLASSPATH com.madhouse.ws.GeospatialService >> "$GEO_OUT" 2>&1 &

  if [ ! -z "$GEO_PID" ]; then
    echo $! > "$GEO_PID"
  fi
fi


if [ "$1" = "stop" ] ; then

  shift

  SLEEP=5
  if [ ! -z "$1" ]; then
    echo $1 | grep "[^0-9]" >/dev/null 2>&1
    if [ $? -gt 0 ]; then
      SLEEP=$1
      shift
    fi
  fi

  FORCE=0
  if [ "$1" = "-force" ]; then
    shift
    FORCE=1
  fi

  if [ ! -z "$GEO_PID" ]; then
    if [ -f "$GEO_PID" ]; then
      if [ -s "$GEO_PID" ]; then
        kill -0 `cat "$GEO_PID"` >/dev/null 2>&1
        if [ $? -gt 0 ]; then
          echo "PID file found but no matching process was found. Stop aborted."
          exit 1
        fi
      else
        echo "PID file is empty and has been ignored."
      fi
    else
      echo "\$GEO_PID was set but the specified file does not exist. Is Geolocation service running? Stop aborted."
      exit 1
    fi
  fi
  
  if [ ! -z "$GEO_PID" ]; then
    if [ -f "$GEO_PID" ]; then
      while [ $SLEEP -ge 0 ]; do
        kill -0 `cat "$GEO_PID"` >/dev/null 2>&1
        if [ $? -gt 0 ]; then
          rm -f "$GEO_PID" >/dev/null 2>&1
          if [ $? != 0 ]; then
            if [ -w "$GEO_PID" ]; then
              cat /dev/null > "$GEO_PID"
            else
              echo "Geolocation service stopped but the PID file could not be removed or cleared."
            fi
          fi
          break
        fi
        if [ $SLEEP -gt 0 ]; then
          sleep 1
        fi
        if [ $SLEEP -eq 0 ]; then
          if [ $FORCE -eq 0 ]; then
            echo "Geolocation service did not stop in time. PID file was not removed."
          fi
        fi
        SLEEP=`expr $SLEEP - 1 `
      done
    fi
  fi

  if [ $FORCE -eq 1 ]; then
    if [ -z "$GEO_PID" ]; then
      echo "Kill failed: \$GEO_PID not set"
    else
      if [ -f "$GEO_PID" ]; then
        PID=`cat "$GEO_PID"`
        echo "Killing Geolocation service with the PID: $PID"
        kill -9 $PID
        rm -f "$GEO_PID" >/dev/null 2>&1
        if [ $? != 0 ]; then
          echo "Geolocation service was killed but the PID file could not be removed."
        fi
      fi
    fi
  fi
fi

if [ "$1" = "-h" ]
then 

  echo "Usage: geoservice.sh ( commands ... )"
  echo "commands:"
  echo "  start        Stat geolocation service"
  echo "  jpda         Start geolocation service under JPDA debugger"
  echo "  stop         Stop Catalina, waiting up to 5 seconds for the process to end"
  echo "  stop -force  Stop Catalina, wait up to 5 seconds and then use kill -KILL if still running"
  exit 1

fi


  

#$JAVA_CMD $JPDA_OPTS $JAVA_OPTS -classpath $CLASSPATH com.madhouse.ws.GeospatialService
